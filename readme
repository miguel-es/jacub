PARA DESCARGAR EL PROYECTO:

git clone https://github.com/miguel-es/jacub.git
git checkout alt_development

FIN DE INSTRUCCIONES PARA DESCARGAR PROYECTO 

PARA EJECUTAR EL AGENTE JACUB EJECUTE LOS SIGUIENTES COMANDOS EN TERMINALES INDEPENDIENTES (TABS):

yarpserver
yarpview
./jacub.sh (script en la raiz del proyecto)

FIN DE PASOS PARA EJECUTAR AGENTE JACUB








requiere:
apt-get install libjsoncpp-dev qml-module-qt-labs-folderlistmodel qml-module-qt-labs-settings

Despues de installar los precompilados en ubuntu :
sudo cp /usr/lib/iCub/cartesiancontrollerclient.so /usr/lib/x86_64-linux-gnu/yarp/
sudo cp /usr/lib/iCub/cartesiancontrollerserver.so /usr/lib/x86_64-linux-gnu/yarp/

ln -s jacub/contexts/ ~/.config/yarp

Comandos iCubSim:

yarpmotorgui (consola de controles)
iCub_SIM (simulador)
yarpmanager (consola de modulos)
yarp server (servidor de yarp)

yarprobotinterface --context simCartesianControl
iKinCartesianSolver --context simCartesianControl --part left_arm
Directorio de código:
/usr/local/src/robot/

Directorio de código de Jacub:
/usr/local/src/robot/jacub

Comandos de cámara del observador:
a=left, s=back, d=right, f=up, v=down, z=up-pan

Para el visualizador (viewer) se necesita instalar la libreria qtbase-dev

Script de inicialización de jacub: ./JacubSim.init

Para inicializar el visualizador: yarpview --name /viewer1

Para conectar la camara al visualizador: yarp connect /icubSim/cam/left /viewer1 mcast

Para conectar la salida del proceso de percepción visual al visualizador: yarp connect /imageProc/image/out /viewer1 mcast

Para connectarse a la cabeza: yarp rpc /icubSim/head/rpc:i

Para doblar la cabeza viendo hacia la mesa: set pos 0 -60

coordenadas de cabeza:

2: + izquierda - derecha (ziquierda-derecha)
1: + derecha - izquierda (ladear la cabeza)
0: + arriba - abajo (arroba abajo)

Para inicializar el CartecianSolver: iKinCartesianSolver  --context simCartesianControl --part left_arm

Para inicializar el CartecianController: yarprobotinterface --context simCartesianControl

Los archivos de configuraci{on de los varios modulos estan en $ICUB_ROOT/app: /usr/local/src/robot/icub-main/app

Contextos: /usr/local/src/robot/icub-main/build/share/iCub/contexts/

PAra automatizar el inicio de modulos: robotScripting/scripts/robotScripting.xml.template


orld mk smodel cuarto1.x wall.bmp 0.158886638525472 0.601547136303311 0.232498144169671


Ruta modelos

/usr/local/src/robot/icub-main/build/share/iCub/contexts/simConfig

coordenadas enfrente de robot

0 0 2

x y z
der izq frente

world mk smodel mesa2.x woodred.bmp 0 0 2

world mk smodel pia/mesaes.x woodred.bmp 0 0 -0.2

Para mover el objeto enfrente del robot incrementar la tercera coordenada de pos (z)
world mk box (three params for size) (three params for pos) (three params for colour)
world mk box 0.1 0.1 0.1 0 2 0.1 1 0 0

agregar caja roja
world mk box 0.1 0.1 0.1 0 0.7 0.3 1 0 0

bola debajo de mano izquierda: world set ball 0.09 0.55387995 0.35

world reference-frame : x y z
cartecian reference-frame : -y z -x (-0.55387995 0.35 -0.09)
cartecian reference-frame : -z -x y (-0.35 -0.09 0.55387995)

-x = hacia adelante
-y = hacia la izquierda
 z = hacia arriba

